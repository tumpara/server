# Generated by Django 3.2.5 on 2021-07-10 09:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('timeline', '0002_alter_entry_visibility'),
        ('gallery', '0003_alter_rawphoto_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutodevelopedPhoto',
            fields=[
                ('entry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='timeline.entry')),
                ('blurhash', models.CharField(help_text='Blurhash textual representation that can be used for loading placeholders.', max_length=100, null=True, verbose_name='blurhash')),
                ('metadata_digest', models.CharField(help_text='This value is used to map images to their RAW counterparts.', max_length=64, null=True, verbose_name='metadata digest value')),
                ('format', models.CharField(max_length=20, verbose_name='format')),
                ('width', models.PositiveIntegerField(verbose_name='width')),
                ('height', models.PositiveIntegerField(verbose_name='height')),
                ('camera_make', models.CharField(blank=True, max_length=50, null=True, verbose_name='camera maker')),
                ('camera_model', models.CharField(blank=True, max_length=50, null=True, verbose_name='camera model')),
                ('iso_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='ISO value')),
                ('exposure_time', models.FloatField(blank=True, help_text="The shot's exposure time, in seconds.", null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='exposure time')),
                ('aperture_size', models.FloatField(blank=True, help_text='Aperture / F-Stop value of the shot, in inverse. A value of 4 in this field implies an f-value of f/4.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='aperture size')),
                ('focal_length', models.FloatField(blank=True, help_text='Focal length of the camera, in millimeters.', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='focal length')),
            ],
            options={
                'verbose_name': 'automatically developed photo',
                'verbose_name_plural': 'automatically developed photos',
            },
            bases=('timeline.entry', models.Model),
        ),
        migrations.RemoveField(
            model_name='photo',
            name='exif_digest',
        ),
        migrations.RemoveField(
            model_name='rawphoto',
            name='exif_digest',
        ),
        migrations.AddField(
            model_name='photo',
            name='metadata_digest',
            field=models.CharField(help_text='This value is used to map images to their RAW counterparts.', max_length=64, null=True, verbose_name='metadata digest value'),
        ),
        migrations.AddField(
            model_name='rawphoto',
            name='metadata_digest',
            field=models.CharField(help_text='This value is used to map images to their RAW counterparts.', max_length=64, null=True, verbose_name='metadata digest value'),
        ),
        migrations.AddConstraint(
            model_name='rawphoto',
            constraint=models.UniqueConstraint(fields=('metadata_digest',), name='metadata_digest_unique_for_raw_files'),
        ),
        migrations.AddField(
            model_name='autodevelopedphoto',
            name='raw_source',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auto_rendition', related_query_name='auto_rendition', to='gallery.rawphoto', verbose_name='raw source'),
        ),
    ]
