import os

from django.core import signing
from django.core.exceptions import ObjectDoesNotExist
from django.http import Http404
from django.views.static import serve

from .preview_cache import PreviewCacheKey, place_image_preview


def preview_image(request, description):
    """Serve a preview image generated by an ImagePreviewable object.

    :param description: Signed request that contains information on the preview. This
        must be a 5-tuple signed by the Django signing framework consisting of the app
        label and model name of the corresponding object, the object's primary key and
        the requested width and height.
    """
    try:
        # URLs go invalid after an hour
        raw_key, *args = signing.loads(description, max_age=3600)
        preview_path = place_image_preview(PreviewCacheKey.from_json(raw_key), *args)
    except (
        signing.BadSignature,
        signing.SignatureExpired,
        ValueError,
        ObjectDoesNotExist,
    ):
        raise Http404()

    # TODO Use some sort of sendfile-like serving mechanism. See here:
    #  https://github.com/johnsensible/django-sendfile/blob/master/sendfile/backends/nginx.py
    return serve(request, os.path.basename(preview_path), os.path.dirname(preview_path))
